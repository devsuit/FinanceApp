@model IEnumerable<FinanceApp.Models.Expense>

   <h2>My Expenses</h2>
<table class="table">
    <thead>
        <tr>
            <th>Id</th>
            <th>Amount</th>
            <th>Date</th>
            <th>Description</th>
            <th>Category</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var expense in Model)
        {
            <tr>
                <td>@expense.Id</td>
                <td>@expense.Amount.ToString("C")</td>
                <td>@expense.Date.ToShortDateString()</td>
                <td>@expense.Description</td>
                <td>@expense.Category</td>
            </tr>
        }
    </tbody>
    </table>
    <h2>Expenses Overview</h2>
<div>   <canvas style="max-width: 450px; max-height:450px;" id="myChart"></canvas></div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    const ctx = document.getElementById('myChart');

    fetch('/Expenses/GetChart')
        .then(response => response.json())
        .then(data => {
            new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: data.map(d => d.category),
                    datasets: [{
                        data: data.map(d => d.total),
                        backgroundColor: [
                            'rgba(255, 99, 132, 0.6)',
                            'rgba(54, 162, 235, 0.6)',
                            'rgba(255, 206, 86, 0.6)',
                            'rgba(75, 192, 192, 0.6)',
                            'rgba(153, 102, 255, 0.6)',
                            'rgba(255, 159, 64, 0.6)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    plugins: {
                        legend: {
                            position: 'top',
                        },
                        title: {
                            display: true,
                            text: 'Expenses by Category'
                        }
                    }
                }
            });
        })
        .catch(error => {
            console.error('Error loading chart data:', error);
        });
</script>

    @*  <script> *@
         
    @*     // Sample data for the chart (replace with your actual data) *@
    @* //     new Chart(ctx, { *@
    @* //       type: 'bar', *@
    @* //       data: { *@
    @* //         labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'], *@
    @* //         datasets: [{ *@
    @* //           label: '# of Votes', *@
    @* //           data: [12, 19, 3, 5, 2, 3], *@
    @* //           borderWidth: 1 *@
    @* //         }] *@
    @* //       }, *@
      
    @* //     }); *@
    @* // </script> *@
